// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/createredis": {
            "post": {
                "description": "You can add data to redis database via this endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Redis"
                ],
                "summary": "Create redis data",
                "operationId": "create-redis",
                "parameters": [
                    {
                        "description": "Json for creating data",
                        "name": "JsonExample",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domains.redisDTO"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/deleteredis": {
            "delete": {
                "description": "You can delete data from redis database via this endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Redis"
                ],
                "summary": "Delete redis data",
                "operationId": "delete-redis",
                "parameters": [
                    {
                        "description": "Json for deleting data",
                        "name": "JsonExample",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domains.redisDTO"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/readredis": {
            "get": {
                "description": "You can read data from redis database via this endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Redis"
                ],
                "summary": "Read redis data",
                "operationId": "read-redis",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name search by query",
                        "name": "key",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/updateredis": {
            "put": {
                "description": "You can update redis data via this endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Redis"
                ],
                "summary": "Update redis data",
                "operationId": "update-redis",
                "parameters": [
                    {
                        "description": "Json for updating data",
                        "name": "JsonExample",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domains.redisDTO"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "domains.redisDTO": {
            "type": "object",
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Жопа",
	Description:      "Какая-то ебень",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
